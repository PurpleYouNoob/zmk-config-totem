#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        Esc {
            bindings = <&kp ESC>;
            key-positions = <13 12 11 10>;
        };

        Tab {
            bindings = <&kp TAB>;
            key-positions = <13 23>;
        };

        Enter {
            bindings = <&kp ENTER>;
            key-positions = <16 17 18 19>;
        };

        Windows {
            bindings = <&kp LEFT_WIN>;
            key-positions = <16 17>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            bindings = <
           &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y     &kp U       &kp I      &kp O      &kp P
           &kp A  &kp S  &kp D     &kp F  &kp G        &kp H     &kp J       &kp K      &kp L      &kp SEMI
&kp LCTRL  &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N     &kp LS(LT)  &kp M      &kp COMMA  &kp DOT   &kp DEL
                         &kp LALT  &mo 1  &kp SPACE    &kp BSPC  &mo 2       &kp LSHFT
            >;

            label = "Base";
        };

        nav_layer {
            bindings = <
           &none            &kp HOME   &kp UP    &kp END    &none        &kp FSLH      &kp LS(EXCL)  &kp LS(AT)     &kp LS(POUND)  &kp LS(QMARK)
           &kp PRINTSCREEN  &kp LEFT   &kp DOWN  &kp RIGHT  &none        &kp LS(RPAR)  &kp LS(DLLR)  &kp LS(PRCNT)  &kp LS(CARET)  &kp EQUAL
&kp LCTRL  &none            &kp PG_UP  &kp INS   &kp PG_DN  &none        &kp LS(GT)    &kp LS(AMPS)  &kp LS(STAR)   &kp LS(LPAR)   &kp LS(RBRC)   &kp DEL
                                       &kp LALT  &mo 1      &kp SPACE    &kp BSPC      &mo 2         &kp LSHFT
            >;

            label = "Nav";
        };

        symb_layer {
            bindings = <
           &kp RBKT      &kp LS(PLUS)  &kp N3         &kp N4    &kp LS(RBRC)    &kp LS(M)  &kp N1     &kp LA(N1)  &kp LA(N2)    &kp LA(N3)
           &kp BSLH      &kp LA(LBKT)  &kp LA(N9)     &kp N5    &kp LS(GT)      &kp N8     &kp MINUS  &kp LA(N0)  &kp LA(RBKT)  &kp LS(PIPE)
&kp LCTRL  &kp LA(FSLH)  &kp EQUAL     &kp LS(QMARK)  &kp FSLH  &kp LA(BSLH)    &kp LA(E)  &kp DOT    &kp LA(N6)  &kp LS(DQT)   &kp LA(BSLH)  &kp DEL
                                       &kp LALT       &mo 1     &kp SPACE       &kp BSPC   &mo 2      &kp LSHFT
            >;

            label = "Symbole";
        };

        fn_layer {
            bindings = <
           &kp F1   &kp F2   &kp F3    &kp F4  &kp F5       &none     &kp C_VOLUME_DOWN  &kp C_VOLUME_UP   &kp K_MUTE  &none
           &kp F6   &kp F7   &kp F8    &kp F9  &kp F10      &none     &kp C_PREV         &kp C_PLAY_PAUSE  &kp C_NEXT  &none
&kp LCTRL  &kp F11  &kp F12  &none     &none   &none        &none     &none              &none             &none       &none  &none
                             &kp LALT  &mo 1   &kp SPACE    &kp BSPC  &mo 2              &kp LSHFT
            >;

            label = "Fn/ Media";
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        Layer_FN {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
